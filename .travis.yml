# This is the complex Travis configuration, which is intended for use
# on open source libraries which need compatibility across multiple GHC
# versions, must work with cabal-install, and should be
# cross-platform. For more information and other options, see:
#
# https://docs.haskellstack.org/en/stable/travis_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

# Use new container infrastructure to enable caching
sudo: false

# Do not choose a language; we provide our own build tools.
language: generic

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/.stack-work

before_cache:
  - rm -rfv $HOME/.cabal/packages
  - rm -rfv $HOME/.stack/indices
  - rm -rfv $HOME/.stack/programs

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:
  # We grab the appropriate GHC and cabal-install versions from hvr's PPA. See:
  # https://github.com/hvr/multi-ghc-travis
  # - env: BUILD=cabal GHCVER=7.0.4 CABALVER=1.16
  #   compiler: ": #GHC 7.0.4"
  #   addons: {apt: {packages: [cabal-install-1.16,ghc-7.0.4], sources: [hvr-ghc]}}
  # - env: BUILD=cabal GHCVER=7.2.2 CABALVER=1.16
  #   compiler: ": #GHC 7.2.2"
  #   addons: {apt: {packages: [cabal-install-1.16,ghc-7.2.2], sources: [hvr-ghc]}}
  # - env: BUILD=cabal GHCVER=7.4.2 CABALVER=1.16
  #   compiler: ": #GHC 7.4.2"
  #   addons: {apt: {packages: [cabal-install-1.16,ghc-7.4.2], sources: [hvr-ghc]}}
  # - env: BUILD=cabal GHCVER=7.6.3 CABALVER=1.16
  #   compiler: ": #GHC 7.6.3"
  #   addons: {apt: {packages: [cabal-install-1.16,ghc-7.6.3], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=7.8.4 CABALVER=1.18
    compiler: ": #GHC 7.8.4"
    addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4], sources: [hvr-ghc]}}
  # - env: BUILD=cabal GHCVER=7.10.3 CABALVER=1.22
  #   compiler: ": #GHC 7.10.3"
  #   addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3], sources: [hvr-ghc]}}
  # - env: BUILD=cabal GHCVER=8.0.2 CABALVER=1.24
  #   compiler: ": #GHC 8.0.2"
  #   addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2], sources: [hvr-ghc]}}
  # - env: BUILD=cabal GHCVER=8.2.2 CABALVER=2.0
  #   compiler: ": #GHC 8.2.2"
  #   addons: {apt: {packages: [cabal-install-2.0,ghc-8.2.2], sources: [hvr-ghc]}}
  # - env: BUILD=cabal GHCVER=8.4.4 CABALVER=2.2
  #   compiler: ": #GHC 8.4.4"
  #   addons: {apt: {packages: [cabal-install-2.2,ghc-8.4.4], sources: [hvr-ghc]}}
  # - env: BUILD=cabal GHCVER=8.6.2 CABALVER=2.4
  #   compiler: ": #GHC 8.6.2"
  #   addons: {apt: {packages: [cabal-install-2.4,ghc-8.6.2], sources: [hvr-ghc]}}

  # Build with the newest GHC and cabal-install. This is an accepted failure,
  # see below.
  - env: BUILD=cabal GHCVER=head  CABALVER=head
    compiler: ": #GHC HEAD"
    addons: {apt: {packages: [cabal-install-head,ghc-head], sources: [hvr-ghc]}}

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  # - env: BUILD=stack ARGS=""
  #   compiler: ": #stack default"
  #   addons: {apt: {packages: [libgmp-dev]}}

  # - env: BUILD=stack ARGS="--resolver lts-2"
  #   compiler: ": #stack 7.8.4"
  #   addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-3"
    compiler: ": #stack 7.10.2"
    addons: {apt: {packages: [libgmp-dev]}}

  # - env: BUILD=stack ARGS="--resolver lts-6"
  #   compiler: ": #stack 7.10.3"
  #   addons: {apt: {packages: [libgmp-dev]}}

  # - env: BUILD=stack ARGS="--resolver lts-7"
  #   compiler: ": #stack 8.0.1"
  #   addons: {apt: {packages: [libgmp-dev]}}

  # - env: BUILD=stack ARGS="--resolver lts-9"
  #   compiler: ": #stack 8.0.2"
  #   addons: {apt: {packages: [libgmp-dev]}}

  # - env: BUILD=stack ARGS="--resolver lts-11"
  #   compiler: ": #stack 8.2.2"
  #   addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-12"
    compiler: ": #stack 8.4.4"
    addons: {apt: {packages: [libgmp-dev]}}

  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly"
    addons: {apt: {packages: [libgmp-dev]}}

  # Build on macOS in addition to Linux
  #- env: BUILD=stack ARGS=""
  #  compiler: ": #stack default osx"
  #  os: osx

  # Travis includes an macOS which is incompatible with GHC 7.8.4
  #- env: BUILD=stack ARGS="--resolver lts-2"
  #  compiler: ": #stack 7.8.4 osx"
  #  os: osx

  #- env: BUILD=stack ARGS="--resolver lts-3"
  #  compiler: ": #stack 7.10.2 osx"
  #  os: osx

  #- env: BUILD=stack ARGS="--resolver lts-6"
  #  compiler: ": #stack 7.10.3 osx"
  #  os: osx

  #- env: BUILD=stack ARGS="--resolver lts-7"
  #  compiler: ": #stack 8.0.1 osx"
  #  os: osx

  #- env: BUILD=stack ARGS="--resolver lts-9"
  #  compiler: ": #stack 8.0.2 osx"
  #  os: osx

  #- env: BUILD=stack ARGS="--resolver lts-11"
  #  compiler: ": #stack 8.2.2 osx"
  #  os: osx

  #- env: BUILD=stack ARGS="--resolver lts-12"
  #  compiler: ": #stack 8.4.4 osx"
  #  os: osx

  #- env: BUILD=stack ARGS="--resolver nightly"
  #  compiler: ": #stack nightly osx"
  #  os: osx

  allow_failures:
  - env: BUILD=cabal GHCVER=head  CABALVER=head
  - env: BUILD=stack ARGS="--resolver nightly"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of base when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer=base; fi

# Download and unpack the stack executable
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config


install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  set -ex
  case "$BUILD" in
    stack)
      # Add in extra-deps for older snapshots, as necessary
      #
      # This is disabled by default, as relying on the solver like this can
      # make builds unreliable. Instead, if you have this situation, it's
      # recommended that you maintain multiple stack-lts-X.yaml files.

      #stack --no-terminal --install-ghc $ARGS test --bench --dry-run || ( \
      #  stack --no-terminal $ARGS build cabal-install && \
      #  stack --no-terminal $ARGS solver --update-config)

      # Build the dependencies
      stack --no-terminal --install-ghc $ARGS test ${BENCH---bench} --only-dependencies
      ;;
    cabal)
      cabal --version
      travis_retry cabal update

      # Overlay Hackage Package Index for GHC HEAD: https://github.com/hvr/head.hackage
      if [ "x$GHCVER" = "xhead" ]; then
        echo 'repository head.hackage'                                                        >> ${HOME}/.cabal/config
        echo '   url: http://head.hackage.haskell.org/'                                       >> ${HOME}/.cabal/config
        echo '   secure: True'                                                                >> ${HOME}/.cabal/config
        echo '   root-keys: 07c59cb65787dedfaef5bd5f987ceb5f7e5ebf88b904bbd4c5cbdeb2ff71b740' >> ${HOME}/.cabal/config
        echo '              2e8555dde16ebd8df076f1a8ef13b8f14c66bad8eafefd7d9e37d0ed711821fb' >> ${HOME}/.cabal/config
        echo '              8f79fd2389ab2967354407ec852cbe73f2e8635793ac446d09461ffb99527f6e' >> ${HOME}/.cabal/config
        echo '   key-threshold: 3'                                                            >> ${HOME}/.cabal.config

        cabal new-update head.hackage -v
      fi

      cabal install --only-dependencies --enable-tests ${BENCH---enable-benchmarks} --ghc-options=-O0 $CABALARGS
      ;;
  esac
  set +ex

script:
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS test ${BENCH---bench} --no-run-benchmarks --haddock --no-haddock-deps
      ;;
    cabal)
      cabal check || [ "$CABALVER" == "1.16" ]
      cabal sdist
      PKGVER=$(cabal info . | awk '{print $2;exit}')
      SRC_TGZ=$PKGVER.tar.gz
      cd dist
      tar zxfv "$SRC_TGZ"
      cd "$PKGVER"
      cabal configure --enable-tests ${BENCH---enable-benchmarks} --ghc-options=-O0 $CABALARGS
      cabal build
      if [ "$CABALVER" = "1.16" ] || [ "$CABALVER" = "1.18" ]; then
        cabal test
      else
        cabal test --show-details=streaming --log=/dev/stdout
      fi
      ;;
  esac
  set +ex
